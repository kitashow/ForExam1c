
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.Остатки.Очистить();
	
	// регистр Остатки Расход
	Движения.Остатки.Записывать = Истина;
	
	//Блокировка
	Движения.Остатки.БлокироватьДляИзменения = Истина;
	
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.Остатки.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	Движения.Записать();
	
	//Проверяем -
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	РНТ.Номенклатура КАК Номенклатура,
	|	СУММА(РНТ.Количество) КАК Количество
	//|	,СУММА(РНТ.Стоимость) КАК Стоимость
	|ПОМЕСТИТЬ ТТВ
	|ИЗ
	|	Документ.РасходнаяНакладная.Товары КАК РНТ
	|ГДЕ
	|	РНТ.Ссылка = &Ссылка
	|	И РНТ.Номенклатура.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТовара.Товар)
	|СГРУППИРОВАТЬ ПО
	|	РНТ.Номенклатура 
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОО.Номенклатура КАК Номенклатура,
	|	ОО.КоличествоОстаток * (-1) КАК Количество,
	|	ОО.Номенклатура.Представление КАК ПредставлениеНоменклатуры
	|ИЗ
	|	РегистрНакопления.Остатки.Остатки(&ИтогиПо, 
	|	(Номенклатура, Склад) В (ВЫБРАТЬ ФН.Номенклатура, &Склад ИЗ ТТВ КАК ФН)
	|	) КАК ОО
	|ГДЕ
	|	ОО.КоличествоОстаток < 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ФН.Номенклатура ИЗ ТТВ КАК ФН;
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);
	Если Режим = РежимПроведенияДокумента.Оперативный Тогда
		ИтогиНа = Дата(1, 1, 1, 0, 0, 0);
	Иначе
		ИтогиНа = Новый Граница(МоментВремени(), ВидГраницы.Включая);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИтогиПо", ИтогиНа);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПакетРезультатов = Запрос.ВыполнитьПакет(); //Если все норм, дальше использую
	ПроверяемыйРезультат = ПакетРезультатов[1];
	
	Если ПакетРезультатов[0].Пустой() Тогда //Одни услуги
		Возврат;
	КонецЕсли;
	
	Если Не ПроверяемыйРезультат.Пустой() Тогда
		Отказ = Истина;
		Сообщить("На складе " + Склад);
		Выборка = ПроверяемыйРезультат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Сообщить("Не достаточно товара " + Выборка.ПредставлениеНоменклатуры + ", не хватает " + XMLСтрока(Выборка.Количество));
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	//Блокировка
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.Партии");
	ЭлементБлокировки.ИсточникДанных = ПакетРезультатов[2];
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();
	
	Если Режим = РежимПроведенияДокумента.Оперативный ИЛИ Проведен Тогда //тут есть замута с временем
		Движения.Партии.Очистить();
		Движения.Партии.БлокироватьДляИзменения = Истина;
		движения.Партии.Записать();
	КонецЕсли;
	
	//Партии
	Движения.Партии.Очистить();
	
	Движения.Партии.Записывать = Истина;
	
	Запрос.Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТВ.Номенклатура КАК Номенклатура,
	|	ПРО.Партия.Ссылка КАК Партия,
	|	ТТВ.Количество КАК СписываемоеКоличество,
	|	СУММА(ПРО.КоличествоОстаток) КАК КоличествоПартии,
	|	СУММА(ПРО.СтоимостьОстаток) КАК СтоимостьПартии
	|ИЗ
	|	ТТВ КАК ТТВ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Партии.Остатки(
	|				&ИтогиНа,
	|				Номенклатура В (ВЫБРАТЬ ФН.Номенклатура ИЗ ТТВ КАК ФН)) КАК ПРО
	|		ПО ТТВ.Номенклатура = ПРО.Номенклатура
	|СГРУППИРОВАТЬ ПО
	|	ТТВ.Номенклатура,
	|	ТТВ.Количество,
	|	ПРО.Партия.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Партия УБЫВ АВТОУПОРЯДОЧИВАНИЕ
	|";
	
	Если РегистрыСведений.УчетнаяПолитика.МетодСписанияНаДату(Дата) = Перечисления.МетодыСписания.FIFO Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УБЫВ АВТОУПОРЯДОЧИВАНИЕ", "ВОЗР АВТОУПОРЯДОЧИВАНИЕ");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ИтогиНа", МоментВремени());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	ПоследнийТовар = "";
	НеобходимоСписать = 0;
	Пока Выборка.Следующий() Цикл
		Если НЕ ПоследнийТовар = Выборка.Номенклатура Тогда
			НеобходимоСписать = Выборка.СписываемоеКоличество;
			ПоследнийТовар = Выборка.Номенклатура;
		КонецЕсли;
		Если НеобходимоСписать = 0 Тогда
			Продолжить;
		КонецЕсли;
		ЦенаСписания = Выборка.СтоимостьПартии / ?(Выборка.КоличествоПартии = 0, 1, Выборка.КоличествоПартии); //позволит 0 списать тоже если гдето развалили итог
		КоличествоСписания = Мин(Выборка.КоличествоПартии, НеобходимоСписать);
		НеобходимоСписать = НеобходимоСписать - КоличествоСписания;
		
		Движение = Движения.Партии.ДобавитьРасход();
		Движение.Период = Дата;
		Движение.Номенклатура = ПоследнийТовар;
		Движение.Партия = Выборка.Партия;
		Движение.Количество = КоличествоСписания;
		Если КоличествоСписания = Выборка.КоличествоПартии Тогда
			Движение.Стоимость = Выборка.СтоимостьПартии;
		Иначе
			Движение.Стоимость = КоличествоСписания * ЦенаСписания;
		КонецЕсли;
	КонецЦикла;
	
	Движения.Партии.Записывать = Истина;
	
КонецПроцедуры
